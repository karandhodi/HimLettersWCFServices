<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
  </configSections>
  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  </appSettings>
  <system.web>
    <compilation debug="true" targetFramework="4.6.1" />
    <httpRuntime targetFramework="4.6.1" />
  </system.web>
  <system.serviceModel>
    <services>
      <service name="HimLettersWCFService.ServiceLetterType"
               behaviorConfiguration="HimLettersWCFService_Behaviour">
        <endpoint address="" binding="webHttpBinding"
                  contract="HimLettersWCFService.IServiceLetterType">
        </endpoint>
      </service>
      <service name="HimLettersWCFService.ServiceLetterDetails"
               behaviorConfiguration="HimLettersWCFService_Behaviour">
        <endpoint address="" binding="webHttpBinding"
                  contract="HimLettersWCFService.IServiceLetterDetails">
        </endpoint>
      </service>
      <service name="HimLettersWCFService.ServiceFacility"
               behaviorConfiguration="HimLettersWCFService_Behaviour">
        <endpoint address="" binding="webHttpBinding"
                  contract="HimLettersWCFService.IServiceFacility">
        </endpoint>
      </service>
      <service name="HimLettersWCFService.ServicePhysician"
               behaviorConfiguration="HimLettersWCFService_Behaviour">
        <endpoint address="" binding="webHttpBinding"
                  contract="HimLettersWCFService.IServicePhysician">
        </endpoint>
      </service>
      <service name="HimLettersWCFService.ServicePhysicianAll"
               behaviorConfiguration="HimLettersWCFService_Behaviour">
        <endpoint address="" binding="webHttpBinding"
                  contract="HimLettersWCFService.IServicePhysicianAll">
        </endpoint>
      </service>
      <service name="HimLettersWCFService.ServicePassword"
              behaviorConfiguration="HimLettersWCFService_Behaviour">
        <endpoint address="" binding="webHttpBinding"
                  contract="HimLettersWCFService.IServicePassword">
        </endpoint>
      </service>
    </services>
    <behaviors>
      <endpointBehaviors>
        <behavior name="">
          <webHttp />
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name="HimLettersWCFService_Behaviour">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
        <behavior name="">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <protocolMapping>
      <add binding="basicHttpsBinding" scheme="https" />
    </protocolMapping>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true" />
    <!--
        To browse web app root directory during debugging, set the value below to true.
        Set to false before deployment to avoid disclosing web app folder information.
      -->
    <directoryBrowse enabled="true" />
  </system.webServer>
  <connectionStrings>
    <add name="HimLettersEntities" connectionString="metadata=res://*/ModelHimLetters.csdl|res://*/ModelHimLetters.ssdl|res://*/ModelHimLetters.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=W1650163\SQLEXPRESS;initial catalog=himletters;integrated security=True;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
  </connectionStrings>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
</configuration>