//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HimLettersWCFService
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HimLettersEntities : DbContext
    {
        public HimLettersEntities()
            : base("name=HimLettersEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Facility> Facilities { get; set; }
        public virtual DbSet<Letter_Details> Letter_Details { get; set; }
        public virtual DbSet<Letter_Type> Letter_Type { get; set; }
        public virtual DbSet<Physician> Physicians { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual ObjectResult<getLetterTypeList_Result> getLetterTypeList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLetterTypeList_Result>("getLetterTypeList");
        }
    
        public virtual ObjectResult<getFacility_Result> getFacility()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getFacility_Result>("getFacility");
        }
    
        public virtual ObjectResult<getLetterDetail_Result> getLetterDetail(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLetterDetail_Result>("getLetterDetail", idParameter);
        }
    
        public virtual ObjectResult<getPhysiciansList_Result> getPhysiciansList(Nullable<int> idLetterType, Nullable<int> idFacility)
        {
            var idLetterTypeParameter = idLetterType.HasValue ?
                new ObjectParameter("IdLetterType", idLetterType) :
                new ObjectParameter("IdLetterType", typeof(int));
    
            var idFacilityParameter = idFacility.HasValue ?
                new ObjectParameter("IdFacility", idFacility) :
                new ObjectParameter("IdFacility", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPhysiciansList_Result>("getPhysiciansList", idLetterTypeParameter, idFacilityParameter);
        }
    
        public virtual ObjectResult<getPhysiciansListAll_Result> getPhysiciansListAll(Nullable<int> idLetterType)
        {
            var idLetterTypeParameter = idLetterType.HasValue ?
                new ObjectParameter("IdLetterType", idLetterType) :
                new ObjectParameter("IdLetterType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPhysiciansListAll_Result>("getPhysiciansListAll", idLetterTypeParameter);
        }
    
        public virtual ObjectResult<string> getPassword(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getPassword", usernameParameter);
        }
    
        public virtual ObjectResult<getPass_Result> getPass(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPass_Result>("getPass", usernameParameter);
        }
    }
}
